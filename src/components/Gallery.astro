---
import { Image } from 'astro:assets';
import image1 from '../assets/image-1.jpg';
import image2 from '../assets/image-6.jpg';
import image3 from '../assets/hero.jpg';
import image4 from '../assets/image-4.jpg';
import image5 from '../assets/image-9.jpg';
import image6 from '../assets/image-16.jpg';
import { Icon } from 'astro-icon/components';
import '../styles/gallery.css';

const galleryImages = [image1, image2, image3, image4, image5, image6];
const doubledImages = [...galleryImages, ...galleryImages];
---

<section class="w-full bg-black py-20">
    <div class="max-w-[1920px] mx-auto px-4 sm:px-8">
        <h2 class="text-4xl md:text-5xl font-serif font-extrabold text-white text-center mb-16">Gallery</h2>
        
        <div class="gallery-container">
            <button 
                class="gallery-prev absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-2 rounded-r-lg transition-colors"
                aria-label="Previous"
            >
                <Icon name="mdi:chevron-left" class="w-8 h-8" />
            </button>

            <div class="gallery-track">
                {doubledImages.map((image, index) => (
                    <Image 
                        src={image} 
                        alt={`Gallery image ${index + 1}`}
                        width={400}
                        height={500}
                        class="gallery-image"
                        loading={index < 4 ? "eager" : "lazy"}
                        decoding={index < 4 ? "sync" : "async"}
                    />
                ))}
            </div>

            <button 
                class="gallery-next absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-2 rounded-l-lg transition-colors"
                aria-label="Next"
            >
                <Icon name="mdi:chevron-right" class="w-8 h-8" />
            </button>
        </div>
    </div>
</section>

<script>
    import { initGallery } from '../scripts/gallery.js';
    
    // Initialize gallery when the component mounts
    if ('requestIdleCallback' in window) {
        requestIdleCallback(() => {
            const cleanup = initGallery();
            // Cleanup when the component is destroyed
            document.addEventListener('astro:before-swap', cleanup);
        });
    } else {
        const cleanup = initGallery();
        document.addEventListener('astro:before-swap', cleanup);
    }
</script>
